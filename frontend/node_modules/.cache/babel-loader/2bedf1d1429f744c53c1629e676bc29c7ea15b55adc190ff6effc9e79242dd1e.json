{"ast":null,"code":"var _jsxFileName = \"D:\\\\chatbot-llm\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [chat, setChat] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessage = {\n      role: 'user',\n      content: input\n    };\n    const updatedChat = [...chat, newMessage];\n    setChat(updatedChat);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: updatedChat\n        })\n      });\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let aiReply = '';\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n').filter(line => line.trim() !== '');\n        for (const line of lines) {\n          if (line === 'data: [DONE]') {\n            setIsLoading(false);\n            break;\n          }\n          if (line.startsWith('data: ')) {\n            const text = line.replace('data: ', '');\n            aiReply += text;\n            setChat(prev => {\n              const last = prev[prev.length - 1];\n              if ((last === null || last === void 0 ? void 0 : last.role) === 'assistant') {\n                return [...prev.slice(0, -1), {\n                  role: 'assistant',\n                  content: aiReply\n                }];\n              } else {\n                return [...prev, {\n                  role: 'assistant',\n                  content: aiReply\n                }];\n              }\n            });\n          }\n        }\n      }\n    } catch (err) {\n      console.error(err);\n      setChat(prev => [...prev, {\n        role: 'assistant',\n        content: '‚ùå L·ªói k·∫øt n·ªëi ƒë·∫øn server!'\n      }]);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDDE0 Chat Bot LLM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        padding: 10,\n        marginBottom: 10\n      },\n      children: [chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '8px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.role === 'user' ? 'üßç‚Äç‚ôÇÔ∏è You' : 'ü§ñ Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u23F3 Bot \\u0111ang tr\\u1EA3 l\\u1EDDi...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n      style: {\n        width: '80%',\n        padding: 8\n      },\n      onKeyDown: e => e.key === 'Enter' && sendMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: 8,\n        marginLeft: 10\n      },\n      children: \"G\\u1EEDi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/sNDQOp7okeO6i/Jidjv1qbb/ZU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","input","setInput","chat","setChat","isLoading","setIsLoading","sendMessage","trim","newMessage","role","content","updatedChat","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","messages","reader","getReader","decoder","TextDecoder","aiReply","done","value","read","chunk","decode","lines","split","filter","line","startsWith","text","replace","prev","last","length","slice","err","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowY","border","marginBottom","map","msg","index","margin","type","onChange","e","target","placeholder","width","onKeyDown","key","onClick","marginLeft","_c","$RefreshReg$"],"sources":["D:/chatbot-llm/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [chat, setChat] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const newMessage = { role: 'user', content: input };\n    const updatedChat = [...chat, newMessage];\n    setChat(updatedChat);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/chat`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: updatedChat }),\n      });\n\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let aiReply = '';\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n').filter(line => line.trim() !== '');\n\n        for (const line of lines) {\n          if (line === 'data: [DONE]') {\n            setIsLoading(false);\n            break;\n          }\n\n          if (line.startsWith('data: ')) {\n            const text = line.replace('data: ', '');\n            aiReply += text;\n            setChat(prev => {\n              const last = prev[prev.length - 1];\n              if (last?.role === 'assistant') {\n                return [...prev.slice(0, -1), { role: 'assistant', content: aiReply }];\n              } else {\n                return [...prev, { role: 'assistant', content: aiReply }];\n              }\n            });\n          }\n        }\n      }\n    } catch (err) {\n      console.error(err);\n      setChat(prev => [...prev, { role: 'assistant', content: '‚ùå L·ªói k·∫øt n·ªëi ƒë·∫øn server!' }]);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>üß† Chat Bot LLM</h2>\n      <div style={{ height: 400, overflowY: 'auto', border: '1px solid #ccc', padding: 10, marginBottom: 10 }}>\n        {chat.map((msg, index) => (\n          <div key={index} style={{ margin: '8px 0' }}>\n            <b>{msg.role === 'user' ? 'üßç‚Äç‚ôÇÔ∏è You' : 'ü§ñ Bot'}:</b> {msg.content}\n          </div>\n        ))}\n        {isLoading && <p>‚è≥ Bot ƒëang tr·∫£ l·ªùi...</p>}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={e => setInput(e.target.value)}\n        placeholder=\"Nh·∫≠p tin nh·∫Øn...\"\n        style={{ width: '80%', padding: 8 }}\n        onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\n      />\n      <button onClick={sendMessage} style={{ padding: 8, marginLeft: 10 }}>G·ª≠i</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}