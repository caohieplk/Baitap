{"ast":null,"code":"var _jsxFileName = \"D:\\\\chatbot-llm\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [chat, setChat] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); // Th√™m state ƒë·ªÉ qu·∫£n l√Ω l·ªói\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessage = {\n      role: 'user',\n      content: input\n    };\n    const updatedChat = [...chat, newMessage];\n    setChat(updatedChat);\n    setInput('');\n    setIsLoading(true);\n    setError(null); // Reset l·ªói tr∆∞·ªõc khi g·ª≠i y√™u c·∫ßu m·ªõi\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: updatedChat\n        })\n      });\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let aiReply = '';\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n').filter(line => line.trim() !== '');\n        for (const line of lines) {\n          if (line === 'data: [DONE]') {\n            setIsLoading(false);\n            break;\n          }\n          if (line.startsWith('data: ')) {\n            const text = line.replace('data: ', '');\n            aiReply += text;\n            setChat(prev => {\n              const last = prev[prev.length - 1];\n              if ((last === null || last === void 0 ? void 0 : last.role) === 'assistant') {\n                return [...prev.slice(0, -1), {\n                  role: 'assistant',\n                  content: aiReply\n                }];\n              } else {\n                return [...prev, {\n                  role: 'assistant',\n                  content: aiReply\n                }];\n              }\n            });\n          }\n        }\n      }\n    } catch (err) {\n      console.error(err);\n      setError('‚ùå L·ªói k·∫øt n·ªëi ƒë·∫øn server! Vui l√≤ng th·ª≠ l·∫°i.');\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDDE0 Chat Bot LLM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        padding: 10,\n        marginBottom: 10\n      },\n      children: [chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '8px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.role === 'user' ? 'üßç‚Äç‚ôÇÔ∏è You' : 'ü§ñ Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u23F3 Bot \\u0111ang ngh\\u0129...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n        style: {\n          width: '80%',\n          padding: 8\n        },\n        onKeyDown: e => e.key === 'Enter' && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: 8,\n          marginLeft: 10\n        },\n        children: \"G\\u1EEDi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V4NYfIOq60lvXPoF6HgIA28/jkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","input","setInput","chat","setChat","isLoading","setIsLoading","error","setError","sendMessage","trim","newMessage","role","content","updatedChat","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","messages","reader","getReader","decoder","TextDecoder","aiReply","done","value","read","chunk","decode","lines","split","filter","line","startsWith","text","replace","prev","last","length","slice","err","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","marginBottom","height","overflowY","border","map","msg","index","margin","display","type","onChange","e","target","placeholder","width","onKeyDown","key","onClick","marginLeft","_c","$RefreshReg$"],"sources":["D:/chatbot-llm/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [chat, setChat] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);  // Th√™m state ƒë·ªÉ qu·∫£n l√Ω l·ªói\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const newMessage = { role: 'user', content: input };\n    const updatedChat = [...chat, newMessage];\n    setChat(updatedChat);\n    setInput('');\n    setIsLoading(true);\n    setError(null);  // Reset l·ªói tr∆∞·ªõc khi g·ª≠i y√™u c·∫ßu m·ªõi\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/chat`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: updatedChat }),\n      });\n\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let aiReply = '';\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n').filter(line => line.trim() !== '');\n\n        for (const line of lines) {\n          if (line === 'data: [DONE]') {\n            setIsLoading(false);\n            break;\n          }\n\n          if (line.startsWith('data: ')) {\n            const text = line.replace('data: ', '');\n            aiReply += text;\n            setChat(prev => {\n              const last = prev[prev.length - 1];\n              if (last?.role === 'assistant') {\n                return [...prev.slice(0, -1), { role: 'assistant', content: aiReply }];\n              } else {\n                return [...prev, { role: 'assistant', content: aiReply }];\n              }\n            });\n          }\n        }\n      }\n    } catch (err) {\n      console.error(err);\n      setError('‚ùå L·ªói k·∫øt n·ªëi ƒë·∫øn server! Vui l√≤ng th·ª≠ l·∫°i.');\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>üß† Chat Bot LLM</h2>\n      {error && <div style={{ color: 'red', marginBottom: '10px' }}>{error}</div>} {/* Hi·ªÉn th·ªã l·ªói n·∫øu c√≥ */}\n      <div style={{ height: 400, overflowY: 'auto', border: '1px solid #ccc', padding: 10, marginBottom: 10 }}>\n        {chat.map((msg, index) => (\n          <div key={index} style={{ margin: '8px 0' }}>\n            <b>{msg.role === 'user' ? 'üßç‚Äç‚ôÇÔ∏è You' : 'ü§ñ Bot'}:</b> {msg.content}\n          </div>\n        ))}\n        {isLoading && <p>‚è≥ Bot ƒëang nghƒ©...</p>}  {/* Th√™m ch·ªâ b√°o t·∫£i */}\n      </div>\n      <div style={{ display: 'flex' }}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"Nh·∫≠p tin nh·∫Øn...\"\n          style={{ width: '80%', padding: 8 }}\n          onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\n        />\n        <button onClick={sendMessage} style={{ padding: 8, marginLeft: 10 }}>G·ª≠i</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}